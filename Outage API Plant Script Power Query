let
    // Define the first day of the current month and the last day of the current month
    FirstDayCurrentMonth = Date.StartOfMonth(DateTime.LocalNow()),
    LastDayCurrentMonth = Date.EndOfMonth(DateTime.LocalNow()),

    // Convert dates to ISO format
    StartDateInISO = DateTime.ToText(FirstDayCurrentMonth, "yyyy-MM-dd") & "T00:00:00.000Z",
    EndDateInISO = DateTime.ToText(LastDayCurrentMonth, "yyyy-MM-dd") & "T23:59:59.999Z",

    url = "https://ummapi.nordpoolgroup.com/messages?areas=10Y1001A1001A59C&eventStartDate=" & StartDateInISO & "&eventStopDate=" & EndDateInISO & "&messageTypes=1&status=1",
    Source = Json.Document(Web.Contents(url)),
    #"Converted to Table" = Table.FromRecords({Source}),
    #"Expanded items" = Table.ExpandListColumn(#"Converted to Table", "items"),
    #"Expanded items1" = Table.ExpandRecordColumn(#"Expanded items", "items", {"messageType", "isOutdated", "unavailabilityType", "reasonCode", "unavailabilityReason", "productionUnits", "eventStart", "eventStop", "remarks", "generationUnits", "otherMarketUnits", "areas", "marketParticipants", "eventStatus", "cancellationReason", "messageId", "version", "publicationDate", "publisherId", "publisherName", "acerRssMessageIds"}, {"items.messageType", "items.isOutdated", "items.unavailabilityType", "items.reasonCode", "items.unavailabilityReason", "items.productionUnits", "items.eventStart", "items.eventStop", "items.remarks", "items.generationUnits", "items.otherMarketUnits", "items.areas", "items.marketParticipants", "items.eventStatus", "items.cancellationReason", "items.messageId", "items.version", "items.publicationDate", "items.publisherId", "items.publisherName", "items.acerRssMessageIds"}),
    #"Split Column" = Table.SplitColumn(#"Expanded items1", "items.acerRssMessageIds", each _, {"items.acerRssMessageIds.0"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Split Column",{{"items.messageType", Int64.Type}, {"items.isOutdated", type logical}, {"items.unavailabilityType", Int64.Type}, {"items.reasonCode", Int64.Type}, {"items.unavailabilityReason", type text}, {"items.productionUnits", type any}, {"items.eventStart", type datetime}, {"items.eventStop", type any}, {"items.remarks", type text}, {"items.generationUnits", type any}, {"items.otherMarketUnits", type any}, {"items.areas", type any}, {"items.marketParticipants", type any}, {"items.eventStatus", Int64.Type}, {"items.cancellationReason", type text}, {"items.messageId", type text}, {"items.version", Int64.Type}, {"items.publicationDate", type datetime}, {"items.publisherId", type text}, {"items.publisherName", type text}, {"items.acerRssMessageIds.0", type text}, {"total", Int64.Type}}),
    #"Expanded items.productionUnits" = Table.ExpandListColumn(#"Changed Type", "items.productionUnits"),
    #"Expanded items.productionUnits1" = Table.ExpandRecordColumn(#"Expanded items.productionUnits", "items.productionUnits", {"name", "eic", "fuelType", "areaEic", "areaName", "installedCapacity", "timePeriods"}, {"items.productionUnits.name", "items.productionUnits.eic", "items.productionUnits.fuelType", "items.productionUnits.areaEic", "items.productionUnits.areaName", "items.productionUnits.installedCapacity", "items.productionUnits.timePeriods"}),
    #"Expanded items.productionUnits.timePeriods" = Table.ExpandListColumn(#"Expanded items.productionUnits1", "items.productionUnits.timePeriods"),
    #"Expanded items.productionUnits.timePeriods1" = Table.ExpandRecordColumn(#"Expanded items.productionUnits.timePeriods", "items.productionUnits.timePeriods", {"unavailableCapacity", "availableCapacity", "eventStart", "eventStop"}, {"items.productionUnits.timePeriods.unavailableCapacity", "items.productionUnits.timePeriods.availableCapacity", "items.productionUnits.timePeriods.eventStart", "items.productionUnits.timePeriods.eventStop"}),
    #"Expanded items.generationUnits" = Table.ExpandListColumn(#"Expanded items.productionUnits.timePeriods1", "items.generationUnits"),
    #"Expanded items.generationUnits1" = Table.ExpandRecordColumn(#"Expanded items.generationUnits", "items.generationUnits", {"productionUnitName", "productionUnitEic", "productionUnitInstalledCapacity", "areaEic", "areaName", "fuelType", "name", "eic", "installedCapacity", "timePeriods"}, {"items.generationUnits.productionUnitName", "items.generationUnits.productionUnitEic", "items.generationUnits.productionUnitInstalledCapacity", "items.generationUnits.areaEic", "items.generationUnits.areaName", "items.generationUnits.fuelType", "items.generationUnits.name", "items.generationUnits.eic", "items.generationUnits.installedCapacity", "items.generationUnits.timePeriods"}),
    #"Expanded items.generationUnits.timePeriods" = Table.ExpandListColumn(#"Expanded items.generationUnits1", "items.generationUnits.timePeriods"),
    #"Expanded items.generationUnits.timePeriods1" = Table.ExpandRecordColumn(#"Expanded items.generationUnits.timePeriods", "items.generationUnits.timePeriods", {"unavailableCapacity", "availableCapacity", "eventStart", "eventStop"}, {"items.generationUnits.timePeriods.unavailableCapacity", "items.generationUnits.timePeriods.availableCapacity", "items.generationUnits.timePeriods.eventStart", "items.generationUnits.timePeriods.eventStop"}),
    #"Expanded items.marketParticipants" = Table.ExpandListColumn(#"Expanded items.generationUnits.timePeriods1", "items.marketParticipants"),
    #"Expanded items.marketParticipants1" = Table.ExpandRecordColumn(#"Expanded items.marketParticipants", "items.marketParticipants", {"name", "code", "acerCode", "eicCode", "leiCode"}, {"items.marketParticipants.name", "items.marketParticipants.code", "items.marketParticipants.acerCode", "items.marketParticipants.eicCode", "items.marketParticipants.leiCode"}),
    #"Filtered Rows" = Table.SelectRows(#"Expanded items.marketParticipants1", each ([items.productionUnits.name] = "Tynagh Energy Limited")),
    #"Removed Other Columns" = Table.SelectColumns(#"Filtered Rows",{"items.productionUnits.name", "items.productionUnits.fuelType", "items.productionUnits.installedCapacity", "items.productionUnits.timePeriods.unavailableCapacity", "items.productionUnits.timePeriods.availableCapacity", "items.productionUnits.timePeriods.eventStart", "items.productionUnits.timePeriods.eventStop", "items.marketParticipants.name", "items.publicationDate", "items.publisherName"}),
    #"Removed Columns" = Table.RemoveColumns(#"Removed Other Columns",{"items.marketParticipants.name", "items.publicationDate", "items.publisherName"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns",{{"items.productionUnits.name", "Plant Name"}, {"items.productionUnits.installedCapacity", "Plant Installed Capacity"}, {"items.productionUnits.timePeriods.unavailableCapacity", "Plant Unavailable Capacity"}, {"items.productionUnits.timePeriods.availableCapacity", "Available Capacity"}, {"items.productionUnits.timePeriods.eventStart", "Event Start"}, {"items.productionUnits.timePeriods.eventStop", "Event Stop"}}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Renamed Columns",{{"Plant Name", type text}, {"items.productionUnits.fuelType", Int64.Type}, {"Plant Installed Capacity", Int64.Type}, {"Plant Unavailable Capacity", Int64.Type}, {"Available Capacity", Int64.Type}, {"Event Start", type datetime}, {"Event Stop", type datetime}}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Changed Type1",{{"Event Start", type date}, {"Event Stop", type date}}),
    #"Merged Queries" = Table.NestedJoin(#"Changed Type2", {"items.productionUnits.fuelType"}, DimFuelTypesNordpoolAPI, {"value"}, "DimFuelTypesNordpoolAPI", JoinKind.LeftOuter),
    #"Expanded DimFuelTypesNordpoolAPI" = Table.ExpandTableColumn(#"Merged Queries", "DimFuelTypesNordpoolAPI", {"value", "text"}, {"DimFuelTypesNordpoolAPI.value", "DimFuelTypesNordpoolAPI.text"}),
    #"Removed Columns1" = Table.RemoveColumns(#"Expanded DimFuelTypesNordpoolAPI",{"items.productionUnits.fuelType", "DimFuelTypesNordpoolAPI.value"}),
    #"Renamed Columns1" = Table.RenameColumns(#"Removed Columns1",{{"DimFuelTypesNordpoolAPI.text", "Fuel Type"}}),
    #"Reordered Columns" = Table.ReorderColumns(#"Renamed Columns1",{"Plant Name", "Plant Installed Capacity", "Plant Unavailable Capacity", "Fuel Type", "Available Capacity", "Event Start", "Event Stop"}),
    #"Renamed Columns2" = Table.RenameColumns(#"Reordered Columns",{{"Plant Name", "Unit Name"}}),
    #"Added Custom" = Table.AddColumn(#"Renamed Columns2", "Unit Code", each ""),
    #"Reordered Columns1" = Table.ReorderColumns(#"Added Custom",{"Unit Name", "Unit Code", "Plant Installed Capacity", "Plant Unavailable Capacity", "Fuel Type", "Available Capacity", "Event Start", "Event Stop"}),
    #"Renamed Columns3" = Table.RenameColumns(#"Reordered Columns1",{{"Plant Installed Capacity", "Unit Installed Capacity"}, {"Plant Unavailable Capacity", "Unit Unavailable Capacity"}, {"Available Capacity", "Unit Available Capacity"}}),
    #"Reordered Columns2" = Table.ReorderColumns(#"Renamed Columns3",{"Unit Name", "Unit Code", "Unit Installed Capacity", "Unit Available Capacity", "Unit Unavailable Capacity", "Event Stop", "Event Start", "Fuel Type"})
in
    #"Reordered Columns2"