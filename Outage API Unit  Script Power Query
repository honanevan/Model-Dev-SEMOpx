let
    // Define the first day of the current month and the last day of the current month
    FirstDayCurrentMonth = Date.StartOfMonth(DateTime.LocalNow()),
    LastDayCurrentMonth = Date.EndOfMonth(DateTime.LocalNow()),

    // Convert dates to ISO format
    StartDateInISO = DateTime.ToText(FirstDayCurrentMonth, "yyyy-MM-dd") & "T00:00:00.000Z",
    EndDateInISO = DateTime.ToText(LastDayCurrentMonth, "yyyy-MM-dd") & "T23:59:59.999Z",

    Source = Json.Document(Web.Contents("https://ummapi.nordpoolgroup.com/messages?areas=10Y1001A1001A59C&eventStartDate=" & StartDateInISO & "&eventStopDate=" & EndDateInISO & "&messageTypes=1&status=1")),
    #"Converted to Table" = Table.FromRecords({Source}),
    #"Expanded items" = Table.ExpandListColumn(#"Converted to Table", "items"),
    #"Expanded items1" = Table.ExpandRecordColumn(#"Expanded items", "items", {"messageType", "isOutdated", "unavailabilityType", "reasonCode", "unavailabilityReason", "productionUnits", "eventStart", "eventStop", "remarks", "generationUnits", "otherMarketUnits", "areas", "marketParticipants", "eventStatus", "cancellationReason", "messageId", "version", "publicationDate", "publisherId", "publisherName", "acerRssMessageIds"}, {"items.messageType", "items.isOutdated", "items.unavailabilityType", "items.reasonCode", "items.unavailabilityReason", "items.productionUnits", "items.eventStart", "items.eventStop", "items.remarks", "items.generationUnits", "items.otherMarketUnits", "items.areas", "items.marketParticipants", "items.eventStatus", "items.cancellationReason", "items.messageId", "items.version", "items.publicationDate", "items.publisherId", "items.publisherName", "items.acerRssMessageIds"}),
    #"Split Column" = Table.SplitColumn(#"Expanded items1", "items.acerRssMessageIds", each _, {"items.acerRssMessageIds.0"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Split Column",{{"items.messageType", Int64.Type}, {"items.isOutdated", type logical}, {"items.unavailabilityType", Int64.Type}, {"items.reasonCode", Int64.Type}, {"items.unavailabilityReason", type text}, {"items.productionUnits", type any}, {"items.eventStart", type datetime}, {"items.eventStop", type any}, {"items.remarks", type text}, {"items.generationUnits", type any}, {"items.otherMarketUnits", type any}, {"items.areas", type any}, {"items.marketParticipants", type any}, {"items.eventStatus", Int64.Type}, {"items.cancellationReason", type text}, {"items.messageId", type text}, {"items.version", Int64.Type}, {"items.publicationDate", type datetime}, {"items.publisherId", type text}, {"items.publisherName", type text}, {"items.acerRssMessageIds.0", type text}, {"total", Int64.Type}}),
    #"Expanded items.productionUnits" = Table.ExpandListColumn(#"Changed Type", "items.productionUnits"),
    #"Expanded items.productionUnits1" = Table.ExpandRecordColumn(#"Expanded items.productionUnits", "items.productionUnits", {"name", "eic", "fuelType", "areaEic", "areaName", "installedCapacity", "timePeriods"}, {"items.productionUnits.name", "items.productionUnits.eic", "items.productionUnits.fuelType", "items.productionUnits.areaEic", "items.productionUnits.areaName", "items.productionUnits.installedCapacity", "items.productionUnits.timePeriods"}),
    #"Expanded items.productionUnits.timePeriods" = Table.ExpandListColumn(#"Expanded items.productionUnits1", "items.productionUnits.timePeriods"),
    #"Expanded items.productionUnits.timePeriods1" = Table.ExpandRecordColumn(#"Expanded items.productionUnits.timePeriods", "items.productionUnits.timePeriods", {"unavailableCapacity", "availableCapacity", "eventStart", "eventStop"}, {"items.productionUnits.timePeriods.unavailableCapacity", "items.productionUnits.timePeriods.availableCapacity", "items.productionUnits.timePeriods.eventStart", "items.productionUnits.timePeriods.eventStop"}),
    #"Expanded items.generationUnits" = Table.ExpandListColumn(#"Expanded items.productionUnits.timePeriods1", "items.generationUnits"),
    #"Expanded items.generationUnits1" = Table.ExpandRecordColumn(#"Expanded items.generationUnits", "items.generationUnits", {"productionUnitName", "productionUnitEic", "productionUnitInstalledCapacity", "areaEic", "areaName", "fuelType", "name", "eic", "installedCapacity", "timePeriods"}, {"items.generationUnits.productionUnitName", "items.generationUnits.productionUnitEic", "items.generationUnits.productionUnitInstalledCapacity", "items.generationUnits.areaEic", "items.generationUnits.areaName", "items.generationUnits.fuelType", "items.generationUnits.name", "items.generationUnits.eic", "items.generationUnits.installedCapacity", "items.generationUnits.timePeriods"}),
    #"Expanded items.generationUnits.timePeriods" = Table.ExpandListColumn(#"Expanded items.generationUnits1", "items.generationUnits.timePeriods"),
    #"Expanded items.generationUnits.timePeriods1" = Table.ExpandRecordColumn(#"Expanded items.generationUnits.timePeriods", "items.generationUnits.timePeriods", {"unavailableCapacity", "availableCapacity", "eventStart", "eventStop"}, {"items.generationUnits.timePeriods.unavailableCapacity", "items.generationUnits.timePeriods.availableCapacity", "items.generationUnits.timePeriods.eventStart", "items.generationUnits.timePeriods.eventStop"}),
    #"Expanded items.marketParticipants" = Table.ExpandListColumn(#"Expanded items.generationUnits.timePeriods1", "items.marketParticipants"),
    #"Expanded items.marketParticipants1" = Table.ExpandRecordColumn(#"Expanded items.marketParticipants", "items.marketParticipants", {"name", "code", "acerCode", "eicCode", "leiCode"}, {"items.marketParticipants.name", "items.marketParticipants.code", "items.marketParticipants.acerCode", "items.marketParticipants.eicCode", "items.marketParticipants.leiCode"}),
    #"Filtered Rows" = Table.SelectRows(#"Expanded items.marketParticipants1", each ([items.generationUnits.timePeriods.unavailableCapacity] <> null and [items.generationUnits.timePeriods.unavailableCapacity] <> 0 and [items.generationUnits.timePeriods.unavailableCapacity] <> 1 and [items.generationUnits.timePeriods.unavailableCapacity] <> 3)),
    #"Removed Other Columns" = Table.SelectColumns(#"Filtered Rows",{"items.remarks", "items.generationUnits.productionUnitName", "items.generationUnits.productionUnitEic", "items.generationUnits.productionUnitInstalledCapacity", "items.generationUnits.areaEic", "items.generationUnits.areaName", "items.generationUnits.fuelType", "items.generationUnits.name", "items.generationUnits.eic", "items.generationUnits.installedCapacity", "items.generationUnits.timePeriods.unavailableCapacity", "items.generationUnits.timePeriods.availableCapacity", "items.generationUnits.timePeriods.eventStart", "items.generationUnits.timePeriods.eventStop", "items.otherMarketUnits", "items.areas", "items.marketParticipants.name", "items.marketParticipants.code", "items.marketParticipants.acerCode", "items.marketParticipants.eicCode", "items.marketParticipants.leiCode", "items.eventStatus", "items.cancellationReason", "items.messageId", "items.version", "items.publicationDate", "items.publisherId", "items.publisherName", "items.acerRssMessageIds.0", "total"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Other Columns",{{"items.generationUnits.productionUnitName", "Unit Name"}, {"items.generationUnits.productionUnitEic", "Unit EIC"}, {"items.generationUnits.productionUnitInstalledCapacity", "Plant Installed Capacity"}}),
    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns",{"items.generationUnits.areaEic", "items.generationUnits.areaName"}),
    #"Renamed Columns1" = Table.RenameColumns(#"Removed Columns",{{"items.generationUnits.fuelType", "Fuel Type"}, {"items.generationUnits.name", "Unit Code"}}),
    #"Removed Columns1" = Table.RemoveColumns(#"Renamed Columns1",{"items.generationUnits.eic"}),
    #"Renamed Columns2" = Table.RenameColumns(#"Removed Columns1",{{"items.generationUnits.installedCapacity", "Unit Installed Capacity"}, {"items.generationUnits.timePeriods.unavailableCapacity", "Unit Unavailable Capacity"}, {"items.generationUnits.timePeriods.availableCapacity", "Available Capacity"}, {"items.generationUnits.timePeriods.eventStart", "Event Start"}, {"items.generationUnits.timePeriods.eventStop", "Event Stop"}}),
    #"Removed Columns2" = Table.RemoveColumns(#"Renamed Columns2",{"items.otherMarketUnits", "items.areas"}),
    #"Renamed Columns3" = Table.RenameColumns(#"Removed Columns2",{{"items.marketParticipants.name", "Participant Name"}, {"items.marketParticipants.code", "Participant REMIT Code"}}),
    #"Removed Columns3" = Table.RemoveColumns(#"Renamed Columns3",{"items.marketParticipants.acerCode", "items.marketParticipants.eicCode", "items.marketParticipants.leiCode", "items.version", "items.messageId", "items.publisherId", "items.acerRssMessageIds.0", "total", "Participant REMIT Code", "Unit EIC", "items.publicationDate", "items.cancellationReason", "items.remarks", "items.eventStatus", "items.publisherName"}),
    #"Reordered Columns" = Table.ReorderColumns(#"Removed Columns3",{"Unit Name", "Plant Installed Capacity", "Fuel Type", "Unit Code", "Unit Installed Capacity", "Available Capacity", "Unit Unavailable Capacity", "Event Start", "Event Stop", "Participant Name"}),
    #"Renamed Columns4" = Table.RenameColumns(#"Reordered Columns",{{"Available Capacity", "Unit Available Capacity"}}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Renamed Columns4",{{"Unit Name", type text}, {"Plant Installed Capacity", Int64.Type}, {"Fuel Type", Int64.Type}, {"Unit Code", type text}, {"Unit Installed Capacity", Int64.Type}, {"Unit Available Capacity", Int64.Type}, {"Unit Unavailable Capacity", Int64.Type}, {"Event Start", type datetime}, {"Event Stop", type datetime}, {"Participant Name", type text}}),
    #"Removed Columns4" = Table.RemoveColumns(#"Changed Type1",{"Plant Installed Capacity", "Participant Name"}),
    #"Reordered Columns1" = Table.ReorderColumns(#"Removed Columns4",{"Unit Name", "Unit Code", "Fuel Type", "Unit Installed Capacity", "Unit Available Capacity", "Unit Unavailable Capacity", "Event Start", "Event Stop"}),
    #"Merged Queries" = Table.NestedJoin(#"Reordered Columns1", {"Fuel Type"}, DimFuelTypesNordpoolAPI, {"value"}, "FuelTypes", JoinKind.LeftOuter),
    #"Expanded FuelTypes" = Table.ExpandTableColumn(#"Merged Queries", "FuelTypes", {"value", "text"}, {"FuelTypes.value", "FuelTypes.text"}),
    #"Removed Columns5" = Table.RemoveColumns(#"Expanded FuelTypes",{"Fuel Type", "FuelTypes.value"}),
    #"Renamed Columns5" = Table.RenameColumns(#"Removed Columns5",{{"FuelTypes.text", "Fuel Type"}}),
    #"Filtered Rows1" = Table.SelectRows(#"Renamed Columns5", each ([Unit Name] <> "Gort Windfarms")),
    #"Changed Type2" = Table.TransformColumnTypes(#"Filtered Rows1",{{"Event Start", type date}, {"Event Stop", type date}})
in
    #"Changed Type2"